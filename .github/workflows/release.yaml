name: Release
on:
  pull_request:
    types: [closed]
    branches: [main]
jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: '0'
      - name: Calculate new version
        id: calculate_version
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` || echo 'v0.0.0')
          pr_title="${{ github.event.pull_request.title }}"

          if [[ "$pr_title" =~ \[v[0-9]+\.[0-9]+\.[0-9]+\] ]]; then
            new_version=$(echo "$pr_title" | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+')
          else
            version="${latest_tag#v}"
            major=$(echo "$version" | cut -d. -f1)
            minor=$(echo "$version" | cut -d. -f2)
            patch=$(echo "$version" | cut -d. -f3)

            if [[ "$pr_title" == \[major\]* ]]; then
              major=$((major + 1))
              minor=0
              patch=0
            elif [[ "$pr_title" == \[minor\]* ]]; then
              minor=$((minor + 1))
              patch=0
            elif [[ "$pr_title" == \[patch\]* ]]; then
              patch=$((patch + 1))
            else
              echo "No release prefix found in PR title. Skipping release."
              exit 0
            fi
            new_version="v$major.$minor.$patch"
          fi
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
      - name: Create and push tag
        if: steps.calculate_version.outputs.new_version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.calculate_version.outputs.new_version }}
          git push origin ${{ steps.calculate_version.outputs.new_version }}
      - name: Create Release
        if: steps.calculate_version.outputs.new_version
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.calculate_version.outputs.new_version }}
          name: Release ${{ steps.calculate_version.outputs.new_version }}
          body: ${{ github.event.pull_request.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
